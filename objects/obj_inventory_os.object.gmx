<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blank</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//i = obj_inventory.i;
for(i = 0; i &lt; maxItems; i += 1){
 item_string[i] = "";
}
xmpos = 0;
mpos = 0;
space = 32;
xspace = 32;
pres = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(showInv){
var mmove = 0;

mmove -= max(keyboard_check_pressed(vk_up), 0);//-1
mmove += max(keyboard_check_pressed(vk_down),0);//1


var maxx = maxItems;
for(i = 0; i &lt; maxx; i += 1){
if(item_string[i] == "" &amp;&amp; global.IN_slot[i] != -1 ){
if(global.IN_slot[i] == 0)item_string[i] = "potion"; 
if(global.IN_slot[i] == 1)item_string[i] = "heal";
if(global.IN_slot[i] == 2)item_string[i] = "sword"; 
if(global.IN_slot[i] == 3)item_string[i] = "???"; 
if(global.IN_slot[i] == 4)item_string[i] = "Wooden Staff"; 
if(global.IN_slot[i] == 5)item_string[i] = "Thing"; 
if(global.IN_slot[i] == 6)item_string[i] = "OBJ"; 
//add here
}
if(global.IN_slot[i] == -1)item_string[i] = "";
}
if(mmove != 0){ 
    mpos += mmove
    if(mpos &lt; 0)mpos = array_length_1d(item_string) - 1;
    if(mpos&gt; array_length_1d(item_string) -1) mpos = 0;

}


var push = max( keyboard_check_released(vk_enter),keyboard_check_released(vk_shift),keyboard_check_released(vk_space),0);
if(push == 1)scr_choice();












}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draws box
if(showInv){
var x1,x2,y1,y2;
x1 = x+10;
x2 = x1 + (10*i);
y1 = y+42;
y2 = y1 + (2*i);
/*
draw_set_colour(c_black);
draw_rectangle(x,y1,x2,y2+64,0);
draw_set_colour(c_white);
draw_rectangle(x,y1,x2,y2+64,true);
*/

draw_sprite_stretched_ext(spr_border,0,x1,y1,x2,y2,c_white,1);


}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draws text
if(showInv){

draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_font(fnt);
draw_set_colour(c_white);

var m;
var cek = scr_Item_check(-1);

for(m = 0; m &lt; array_length_1d(item_string); m += 1){
if(cek != 0 &amp;&amp; m &gt; 4){
xspace =105 ;
}
for(i = 0; i&lt; maxItems; i += 1){
draw_text(x+xspace,y1+(m*space)+16, string(item_string[m]));
//string_length(item_strig[m])
}
}

draw_sprite(spr_curser,0,x+xmpos,y1+(mpos * space));


}




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug
if(showInv){
var x1 = x+228-8;
var x2 =x+388- 10; 
var y1 = y - 15;
var y2 = y+10;
/*
draw_set_colour(c_black);
draw_rectangle(x1,y1,x2,y2,0);
draw_set_colour(c_white);
draw_rectangle(x1,y1,x2,y2,1);
*/
draw_sprite_stretched_ext(spr_border,0,x1,y1,x2,y2,c_white,1);

draw_set_colour(c_white);
draw_text(x+228,y,"Inventory slot[0]: "+string(global.IN_slot[0]));
draw_text(x+228,y+16,"Inventory slot[1]: "+string(global.IN_slot[1]));
draw_text(x+228,y+32,"Inventory slot[2]: "+string(global.IN_slot[2]));
draw_text(x+228,y+52,"Inventory slot[3]: "+string(global.IN_slot[3]));
draw_text(x+228,y+72,"Inventory slot[4]: "+string(global.IN_slot[4]));

draw_text(x+388,y,"Inventory slot[0]: "+string(item_string[0]));
draw_text(x+388,y+16,"Inventory slot[1]: "+string(item_string[1]));
draw_text(x+388,y+32,"Inventory slot[2]: "+string(item_string[2]));
draw_text(x+388,y+52,"Inventory slot[3]: "+string(item_string[3]));
draw_text(x+388,y+72,"Inventory slot[4]: "+string(item_string[4]));


draw_set_colour(c_yellow);
draw_text(x+582,y,"Mpos: "+string(mpos));


//draw_text(x,y*(i+5),"Item_string slot"+string(item_string[i]));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(vk_up))audio_play_sound(snd_select,0,0);
if(keyboard_check_pressed(vk_down))audio_play_sound(snd_select,0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(vk_up))audio_play_sound(snd_select,0,0);
if(keyboard_check_pressed(vk_down))audio_play_sound(snd_select,0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>64,0</point>
    <point>64,112</point>
    <point>0,112</point>
  </PhysicsShapePoints>
</object>
