<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sets vars
opponent = 0;
x = room_width / 2;
y = room_height / 2;
enc_spr = spr_null;
img = 0;

options[0] = "Fight";
options[1] = "Items";
options[2] = "Defend";
//instance_create(32,640,obj_attack);
x1 = 32;
y1 = 640;
xmpos = 0;
mpos = 0;
space = 364;
xspace = 32;
scale = 10;
cur = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///When Fight
for(i = 0; i&lt;50;i+=1){
for(j = 0; j&lt;50;j+=1){
fight[i,j] = "";
}
}
fight[0,0] = "Words";
fight[10,0] = "Words";
fight[20,0] = "Words";
fight[0,3] = "Words";
//fight[2,2] = "Words";

fighting = false;
















sel = 0;




origin_point_x = x1;
origin_point_y = y1;

grid_box_size= 2;

length_of_grid = 40;
height_of_grid = 40;


selection_x = 0;
selection_y = x1;
origin_point= grid_box_size;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation
if(img &lt;= 4){
img += 0.5;
}else{img = 0}

if(cur &lt;= 6){
cur += 0.5;
}else{cur = 0}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Selection
var mmove = 0;

mmove -= max(keyboard_check_pressed(vk_left), 0);//-1
mmove += max(keyboard_check_pressed(vk_right),0);//1



if(mmove != 0){ 
    mpos += mmove
    if(mpos &lt; 0)mpos = array_length_1d(options) - 1;
    if(mpos&gt; array_length_1d(options) -1) mpos = 0;

}

var push = max( keyboard_check_released(vk_enter),keyboard_check_released(vk_shift),keyboard_check_released(vk_space),0);
if(push == 1) scr_enc();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (opponent){
case obj_slime:
enc_spr = obj_slime.enc_spr;
break;



}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(x,y+16,string(grid_box_size));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draws opponent 
//if(instance_exists(obj_encounterment))


draw_set_colour(c_white);
draw_rectangle(0,0,room_width,room_height,1);
draw_set_colour(c_black);
draw_rectangle(0,544,room_width,room_height,0);
draw_set_colour(c_white);
draw_rectangle(0,544,room_width,room_height,1);
draw_sprite_ext(enc_spr,img,x+200,y/2 - 115,scale,scale,0,c_white,1);






</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Options
if(!fighting){
draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_font(fnt);
draw_set_colour(c_white);

var m;
for(m = 0; m &lt; array_length_1d(options); m += 1){

draw_text_transformed(x1+(m*space),y1, string(options[m]),scale-7,scale-7,image_angle);
//string_length(item_strig[m])
}


draw_sprite(spr_curser,cur,x1+(mpos * space) - 32,y1-16);

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fight options
if(fighting){
for (i=0; i &lt;= length_of_grid; i+= 1)
{
    for (j=0; j &lt;=  height_of_grid; j += 1){
         draw_text_transformed( (i * grid_box_size) + origin_point_x, (j * grid_box_size) + origin_point_y ,string( fight[ i, j ]),scale -7,scale -7,image_angle);
    }
   }

    
  
    draw_sprite(spr_curser,cur,selection_x * grid_box_size + origin_point,selection_y * grid_box_size + origin_point);

    //draw_text( selection_x * grid_box_size + origin_point, selection_y * grid_box_size + origin_point ,string( fight[ selection_x , selection_y]))
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="48">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var test = 0; 
grid_box_size ++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
