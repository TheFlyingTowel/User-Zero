<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTrickRamp</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
 Activated = false;
 ShoomDirection = 1;
 key[1]    = 0;
 key[2]    = 0;
 key[3]    = 0;
 button[1] = 0;
 button[2] = 0;
 button[3] = 0;
 i         = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( Activated == 0 ) 
{
io_clear();
Activated = 1;

sc1=1 sc2=1 sc3=1;
al1=1 al2=1 al3=1;
al=0;
i=0;
keys=choose(1,2,3,4,5,6);
done=0;
delay=10;

switch keys
{
case 1: key[1]=ord('A') key[2]=ord('S') key[3]=ord('D') break;
case 2: key[1]=ord('S') key[2]=ord('D') key[3]=ord('A') break;
case 3: key[1]=ord('D') key[2]=ord('A') key[3]=ord('S') break;
case 4: key[1]=ord('A') key[2]=ord('D') key[3]=ord('S') break;
case 5: key[1]=ord('S') key[2]=ord('A') key[3]=ord('D') break;
case 6: key[1]=ord('D') key[2]=ord('S') key[3]=ord('A') break;
}

switch key[1]
{
case ord('A'):button[1]=6 break;
case ord('S'):button[1]=7 break;
case ord('D'):button[1]=8 break;
}
switch key[2]
{
case ord('A'):button[2]=6 break;
case ord('S'):button[2]=7 break;
case ord('D'):button[2]=8 break;
}
switch key[3]
{
case ord('A'):button[3]=6 break;
case ord('S'):button[3]=7 break;
case ord('D'):button[3]=8 break;
}
io_clear();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> 
 objPlayer.Action  = 1;
 objPlayer.Gravity = -gogravity;
 objPlayer.Speed   = gospeed*objPlayer.ShoomDirection;
  
 screen = instance_create(x, y, trickDoneScreen);
 screen.index = choose(3,4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>objPlayer</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> 
 Action  = ActionNormal;
 Gravity = -3;
 Speed   = 3*ShoomDirection;
 
 screen = instance_create(x, y, trickDoneScreen);
 screen.index = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    if ( Activated == 1 )
    {
    depth = -10000;
    if delay&gt;0 {delay-=1} else {delay=0}
    if delay == 0 
    {
    if keyboard_check_pressed(key[1]) &amp;&amp; sc1&lt;1.5 { i=1; if done&lt;2 {done+=1 sound_play(sndQTE)} else {sound_play(sndQTEOk) alarm[9]=1 Activated=0} }
    if keyboard_check_pressed(key[2]) &amp;&amp; sc2&lt;1.5 { i=2; if done&lt;2 {done+=1 sound_play(sndQTE)} else {sound_play(sndQTEOk) alarm[9]=1 Activated=0} }
    if keyboard_check_pressed(key[3]) &amp;&amp; sc3&lt;1.5 { i=3; if done&lt;2 {done+=1 sound_play(sndQTE)} else {sound_play(sndQTEOk) alarm[9]=1 Activated=0} }
    }
    }
    if ( Activated != 1 ) { depth=0 };
    
    if i=1 {sc1*=1.2 al1/=2 gospeed=8 gogravity=12}
    if i=2 {sc2*=1.2 al2/=2 gospeed=10 gogravity=10}
    if i=3 {sc3*=1.2 al3/=2 gospeed=14 gogravity=5}

    if al&lt;0.8 {al+=1/12}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index, current_time div 60, x, y)

if (Activated == true)
{
draw_set_font(global.FntResults);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_sprite_ext(wordsTricks,button[1],floor(objPlayer.x)+0,floor(objPlayer.y)-50,sc1,sc1,0,c_white,al1)
draw_sprite_ext(wordsTricks,button[2],floor(objPlayer.x)+28,floor(objPlayer.y)-22,sc2,sc2,0,c_white,al2)
draw_sprite_ext(wordsTricks,button[3],floor(objPlayer.x)+50,floor(objPlayer.y)+10,sc3,sc3,0,c_white,al3)
draw_set_valign(fa_top);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
