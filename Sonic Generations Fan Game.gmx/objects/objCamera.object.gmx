<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>maskMain</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    
    // ---- Setup camera ---- //    
    view_object[ViewTarget]  = id;
    view_visible[ViewTarget] = true;
    StopCamera               = false;
    
    x = global.StartX;
    y = global.StartY;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    // ---- Set position for player's camera ----   
    // ---- Deactivate all objects ------------------------------------------------------
    instance_deactivate_object(objParentDeactivable);     
    instance_activate_region(view_xview[ViewTarget]-64, view_yview[ViewTarget]-64, view_wview[ViewTarget]+128, view_hview[ViewTarget]+128, true);  
    if (!StopCamera) {
    x = floor(scrLinearInterpolate(floor(CameraTarget.x)+(CameraTarget.LinkedCameraShiftAmountX), floor(x), 0.7));
    y = floor(scrLinearInterpolate(floor(CameraTarget.y)+(CameraTarget.LinkedCameraShiftAmountY), floor(y), 0.7));
    }
    
    var nearbridge;
    nearbridge = instance_nearest(x, y, objParentBridge);
    if distance_to_object(nearbridge)&lt;500 {
    instance_activate_object(instance_nearest(x, y,objBridgeNode));
    }
    
    instance_activate_object(objEnemyChopper);
    instance_activate_object(objSwingHandle);
    instance_activate_object(objSwingPlatform);
    instance_activate_object(objSwingHandleLong);
    instance_activate_object(objSwingPlatformLong);
    instance_activate_object(objSwingHandleMedium);
    instance_activate_object(objSwingPlatformMedium);
    instance_activate_object(objGHZPoleSpikes);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
