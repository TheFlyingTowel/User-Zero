<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pause = false;
controls = false;
menu = sprPauseMenu;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (pause == true)
{
     draw_set_alpha( 1 );
     draw_set_color( c_white );
     draw_background(_back,view_xview,view_yview)
     draw_set_alpha( 2/3 );
     draw_set_color( c_black );
     draw_rectangle( view_xview-5, view_yview-5, (view_xview + view_wview), (view_yview + view_hview), false );
     draw_set_alpha( 1 );
     draw_set_color( c_white );
     draw_sprite(menu,option, (view_xview + (view_wview/2)), (view_yview + (view_hview/2)))
     
     if controls == false
     {
        if keyboard_check_pressed(vk_up) &amp;&amp; option != 0 then {option -= 1 sound_play(sndClickMenu)};
        if keyboard_check_pressed(vk_down) &amp;&amp; option != 3 then {option += 1 sound_play(sndClickMenu)};
     }
     
     if keyboard_check_pressed(vk_enter) &amp;&amp; controls == true
     {
        menu = sprPauseMenu
        option = 0;
        controls = false; 
        break;
     }
     
     if keyboard_check_pressed(vk_enter) &amp;&amp; controls == false then switch(option)
     {
        case 0: sound_play(sndMenuAction); instance_activate_all(); pause = false; background_delete(_back); if (objPlayer.Invincibility == 0) {with musicStage alarm[1]=1}; break;
        case 1: if room != RoomHub
        { 
            sound_play(sndMenuAction);
            global.StartX   = -1;
            global.StartY   = -1;
            global.GetStart =  0;
            room_restart();
            break;
        }
        else
        {  
            sound_play(sndMenuAction);
            pause = false;  
            instance_activate_all(); 
            break;
        }
        case 2:
        if global.Player1 = objPlayerClassicSonic
        {
            sound_play(sndMenuAction);
            menu = sprPauseControlsMenu
            option = 1;
            controls = true;
            break;
        }
        else
        {
            sound_play(sndMenuAction);
            menu = sprPauseControlsMenu
            option = 0;
            controls = true;
            break;
        }
        case 3: 
        if room != RoomHub
        {
            sound_play(sndMenuAction);
            global.StartX   = -1;
            global.StartY   = -1;
            global.GetStart =  0;
            global.NextRoom = RoomHub; instance_create(x, y, objTransitionFadeOut);
            break;
        }
        else
        {
            sound_play(sndMenuAction);
            global.NextRoom = RoomMenu2; instance_create(x, y, objTransitionFadeOut);
            break;
        }
        
     }
}
else if (pause == false)
{
    if keyboard_check_pressed(vk_enter)
    {
        _back = background_create_from_screen(0,0,view_wview[0],view_hview[0],0,0);
        pause = true;
        instance_deactivate_all(true);
        instance_activate_object(objGlobal);
        instance_activate_object(musicStage);
        with (musicStage) alarm[0] = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
