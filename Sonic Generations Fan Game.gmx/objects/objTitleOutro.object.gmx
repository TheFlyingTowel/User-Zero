<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>maskMain</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>step = 600;
mode = 1;
alpha = 0;
time = 120;
alarm[0] = 1;
alarm[2] = time;

// this 2 lines are used only once, you can use it in create event
global.ps = part_system_create();
global.pt1 = part_type_create();

{
// this 10 lines are used to create your own simple effect
part_type_shape(global.pt1,pt_shape_star);
part_type_size(global.pt1,0.75,1,-0.025,0);
part_type_color3(global.pt1,16777215,16777215,16777215);
part_type_alpha3(global.pt1,1,1,0.8);
part_type_speed(global.pt1,1,4,0,0);
part_type_life(global.pt1,20,30);
part_type_direction(global.pt1,315,360,0,0);
part_type_orientation(global.pt1,direction,direction,choose(2,-2),0,1);
part_type_gravity(global.pt1,0,0);
part_type_scale(global.pt1,1,1);
part_type_blend(global.pt1,0);
global.em = part_emitter_create(global.ps);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mode</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
 if (step&gt;-100) {step -= 1; alarm[1]=1} else {step = 600; alarm[0]=50}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
 if (step &gt; 1) {step /= 1.2; alarm[0]=1} 
 else {step = 1; alarm[1]=150};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>  
  if (mode=1) {if (image_alpha &gt; 0) {image_alpha -= 0.07}};
  if (mode=2) {if (alpha &lt; 1) {alpha += 0.07} else {
    room_goto(global.NextRoom);
    instance_destroy();
    }};
    
  if (FMODInstanceGetVolume(global.bkMusic)&gt;0) {
       FMODInstanceFadeVolume(global.bkMusic, 1, 0, room_speed*2)};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    // --- Set drawing mode ----------------------------------------
    draw_set_alpha(1-image_alpha);
    draw_set_color(c_black);
    
    // --- Draw ----------------------------------------------------
    draw_rectangle(view_xview[view_current]-5, view_yview[view_current]-5,
                   view_xview[view_current]+view_wview[view_current]+5,
                   view_yview[view_current]+view_hview[view_current]+5,
                   false);

    // --- Return back to normal drawing mode ----------------------
    draw_set_alpha(1);
    draw_set_color(c_white);
    
    draw_sprite(spr_m_msonic, current_time div 60, (view_xview[view_current]+view_wview[view_current]-45)-step, view_yview[view_current]+view_hview[view_current]-32);
    draw_sprite(spr_m_csonic, current_time div 60, floor((view_xview[view_current]+view_wview[view_current]-90)-step*1.5), view_yview[view_current]+view_hview[view_current]-32);
    draw_sprite(spr_m_nowloading, current_time div 120, (view_xview[view_current]+view_wview[view_current]-30), view_yview[view_current]+view_hview[view_current]-15);
    
    // --- Set drawing mode ----------------------------------------
    draw_set_alpha(alpha);
    draw_set_color(c_black);
    
    // --- Draw ----------------------------------------------------
    draw_rectangle(view_xview[view_current]-5, view_yview[view_current]-5,
                   view_xview[view_current]+view_wview[view_current]+5,
                   view_yview[view_current]+view_hview[view_current]+5,
                   false);

    // --- Return back to normal drawing mode ----------------------
    draw_set_alpha(1);
    draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
